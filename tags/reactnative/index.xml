<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reactnative on Jon Cain 👨‍💻 (jonifen.co.uk)</title><link>/tags/reactnative/</link><description>Recent content in reactnative on Jon Cain 👨‍💻 (jonifen.co.uk)</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>(c) 2020 Jon Cain</copyright><lastBuildDate>Thu, 17 Jun 2021 15:11:12 +0100</lastBuildDate><atom:link href="/tags/reactnative/index.xml" rel="self" type="application/rss+xml"/><item><title>iOS APNs/APS Environments</title><link>/blog/2021/ios-push-notifications-apns-environments/</link><pubDate>Thu, 17 Jun 2021 15:11:12 +0100</pubDate><guid>/blog/2021/ios-push-notifications-apns-environments/</guid><description>At work, we&amp;rsquo;re working on a React Native mobile app. For our iOS deployment, we have our test builds (that consumes APIs in a testing environment) going to MS App Center, and production builds going to TestFlight, eventually being promoted to the App Store.
We use MS Notification Hub to handle our push notifications that are triggered by internal systems etc. but we wanted to achieve a situation where we were using a testing APNs environment (i.</description></item></channel></rss>