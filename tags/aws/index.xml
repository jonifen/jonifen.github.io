<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws on Jon Cain üë®‚Äçüíª (jonifen.co.uk)</title><link>/tags/aws/</link><description>Recent content in aws on Jon Cain üë®‚Äçüíª (jonifen.co.uk)</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>(c) 2020 Jon Cain</copyright><lastBuildDate>Fri, 05 Mar 2021 11:02:32 +0000</lastBuildDate><atom:link href="/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing Mobile App in AWS Device Farm using Appium and Node</title><link>/blog/2021/appium-node-aws-device-farm-react-native/</link><pubDate>Fri, 05 Mar 2021 11:02:32 +0000</pubDate><guid>/blog/2021/appium-node-aws-device-farm-react-native/</guid><description>Warning: this post is quite code heavy as I offer our solution as an example
At work, we&amp;rsquo;ve been working on a mobile app for our customers. We&amp;rsquo;ve been looking at automated testing to interact with the app like a user would on a device and came across Appium and Detox as potential options that wouldn&amp;rsquo;t cost too much to run.
As we primarily worked on Windows machines, Detox was out of the running as it seems to be only guaranteed support on MacOS, so we started looking at Appium instead.</description></item><item><title>Hosting Umbraco 7 on AWS Elastic Beanstalk</title><link>/blog/hosting-umbraco-7-aws-elastic-beanstalk/</link><pubDate>Thu, 13 Jun 2019 21:05:13 +0100</pubDate><guid>/blog/hosting-umbraco-7-aws-elastic-beanstalk/</guid><description>Previously at work, our marketing websites were all designed up front, with copy provided by our colleagues in Marketing and then the pages were generated by the development teams. Because this was taking our developers away from the tasks where they can add real value to the customer journey by streamlining the end-to-end process, it was decided that the company would benefit from introducing a CMS solution with which the Marketing team and Content Writers would be able to manage content themselves.</description></item><item><title>No executable found matching command "dotnet-lambda"</title><link>/blog/no-executable-found-dotnet-lambda/</link><pubDate>Wed, 01 May 2019 21:01:03 +0100</pubDate><guid>/blog/no-executable-found-dotnet-lambda/</guid><description>When packaging up a dotnetcore lambda function for deployment to AWS, you would run the following command:
dotnet lambda package -o ../../build/{DestinationFileName}.zip However, when I ran this command earlier today on a new Lambda function project, I got the following error:
No executable found matching command &amp;quot;dotnet-lambda&amp;quot; This is because the Amazon.Lambda.Tools package isn&amp;rsquo;t being included in the dotnet build process, so to fix things, I had to edit the .</description></item></channel></rss>